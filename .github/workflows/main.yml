name: CI/CD for .NET Core API

on:
  push:
    branches:
      - desenvolvimentoBackEnd  # Branch that triggers the pipeline

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # Updated to v3

      # Set up .NET SDK
      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'  # Define the .NET version used

      # Restore dependencies
      - name: Restore dependencies
        run: dotnet restore ./sigmaBack.sln

      # Build the application
      - name: Build the application
        run: dotnet build ./sigmaBack.sln --configuration Release

      # Run tests
      - name: Run tests
        run: dotnet test ./sigmaBack.sln --configuration Release

      # Publish the application (prepare for production)
      - name: Publish the application
        run: dotnet publish ./sigmaBack.sln --configuration Release --output ./publish

      # Build Docker image using the existing Dockerfile
      - name: Build Docker image
        run: |
          docker build -t dockersigmasback:latest -f ./Dockerfile ./  # Correct path to the Dockerfile

      # Verify if the Docker image was created correctly
      - name: Verify Docker image
        run: docker images dockersigmasback:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensures the build job is completed before deployment

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Updated to v3

      # Deploy to Server
      - name: Deploy to Server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}  # Private key stored as a secret in GitHub
          SERVER_USER: ${{ secrets.SERVER_USER }}  # Username on your server
          SERVER_IP: ${{ secrets.SERVER_IP }}  # Server IP
        run: |
          # Save the private key to a temporary file
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' > private_key
          chmod 600 private_key
          # Debug: Verify if the environment variables are correct
          echo "SERVER_USER: $SERVER_USER"
          echo "SERVER_IP: $SERVER_IP"
          
          # Save the Docker image locally
          docker save dockersigmasback:latest -o dockersigmasback.tar
          # Copy the Docker image to the server
          scp -o StrictHostKeyChecking=no -o IdentitiesOnly=yes -i private_key dockersigmasback.tar $SERVER_USER@$SERVER_IP:/mnt/volumes/apis/docker_sigma_api/docker_sigmaBack.tar
          # Stop and remove the old container, if it exists
          ssh -o StrictHostKeyChecking=no -i private_key $SERVER_USER@$SERVER_IP "docker rm -f sigmaBack-container || true"
          # Load the new image on the server
          ssh -o StrictHostKeyChecking=no -i private_key $SERVER_USER@$SERVER_IP "docker load < /mnt/volumes/apis/docker_sigma_api/docker_sigmaBack.tar"
          # Run the new container on the server
          ssh -o StrictHostKeyChecking=no -i private_key $SERVER_USER@$SERVER_IP "docker run -d -p 5001:5001 -p 5002:5002 --name sigmaBack-container dockersigmasback:latest"
          # Remove the temporary private key file
          rm -f private_key
