name: CI/CD for .NET Core API

on:
  push:
    branches:
      - desenvolvimentoBackEnd  # Branch que dispara a pipeline

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # Atualizado para v3

      # Configurar o .NET SDK
      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'  # Define a versão do .NET utilizada

      # Restaurar as dependências
      - name: Restore dependencies
        run: dotnet restore ./sigmaBack.sln

      # Compilar a aplicação
      - name: Build the application
        run: dotnet build ./sigmaBack.sln --configuration Release

      # Rodar os testes
      - name: Run tests
        run: dotnet test ./sigmaBack.sln --configuration Release

      # Publicar a aplicação (preparar para produção)
      - name: Publish the application
        run: dotnet publish ./sigmaBack.sln --configuration Release --output ./publish

      # Criar a imagem Docker usando o Dockerfile existente
      - name: Build Docker image
        run: |
          docker build -t dockersigmasback:latest -f ./Dockerfile ./  # Caminho correto para o Dockerfile

      # Verificar se a imagem Docker foi criada corretamente
      - name: Verify Docker image
        run: docker images dockersigmasback:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Garante que o job de build seja concluído antes do deploy

    steps:
      # Configurar o acesso SSH e copiar a imagem Docker para o servidor
      - name: Deploy Docker image to Server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}  # Chave privada armazenada como secret no GitHub
          SERVER_USER: ${{ secrets.SERVER_USER }}  # Nome do usuário no seu servidor
          SERVER_IP: ${{ secrets.SERVER_IP }}  # IP do seu servidor
        run: |
          # Salva a chave privada em um arquivo temporário
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' > private_key
          chmod 600 private_key

          # Debug: Verificar se as variáveis de ambiente estão corretas
          echo "SERVER_USER: $SERVER_USER"
          echo "SERVER_IP: $SERVER_IP"
          
          # Salvar a imagem Docker localmente
          docker save dockersigmasback:latest -o dockersigmasback.tar
          
          # Copiar a imagem Docker para o servidor
          scp -o StrictHostKeyChecking=no -i private_key dockersigmasback.tar $SERVER_USER@$SERVER_IP:/mnt/volumes/apis/docker_sigma_api

          # Remover a imagem local após o envio para liberar espaço
          rm dockersigmasback.tar
          
          # Remover o arquivo temporário da chave privada
          rm -f private_key
